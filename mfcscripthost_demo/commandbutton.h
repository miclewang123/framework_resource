#if !defined(AFX_COMMANDBUTTON_H__571AB67C_C79E_4B48_9C2C_14D91A448B3C__INCLUDED_)
#define AFX_COMMANDBUTTON_H__571AB67C_C79E_4B48_9C2C_14D91A448B3C__INCLUDED_

#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000
// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.

/////////////////////////////////////////////////////////////////////////////
// CCommandButton wrapper class

class CCommandButton : public CWnd
{
protected:
	DECLARE_DYNCREATE(CCommandButton)
public:
	CLSID const& GetClsid()
	{
		static CLSID const clsid
			= { 0xd7053240, 0xce69, 0x11cd, { 0xa7, 0x77, 0x0, 0xdd, 0x1, 0x14, 0x3c, 0x57 } };
		return clsid;
	}
	virtual BOOL Create(LPCTSTR lpszClassName,
		LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect,
		CWnd* pParentWnd, UINT nID,
		CCreateContext* pContext = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID); }

    BOOL Create(LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect, CWnd* pParentWnd, UINT nID,
		CFile* pPersist = NULL, BOOL bStorage = FALSE,
		BSTR bstrLicKey = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID,
		pPersist, bStorage, bstrLicKey); }

// Attributes
public:

// Operations
public:
	void SetAutoSize(BOOL bNewValue);
	BOOL GetAutoSize();
	void SetBackColor(long nNewValue);
	long GetBackColor();
	void SetBackStyle(long nNewValue);
	long GetBackStyle();
	void SetCaption(LPCTSTR lpszNewValue);
	CString GetCaption();
	void SetEnabled(BOOL bNewValue);
	BOOL GetEnabled();
	void SetRefFont(LPDISPATCH newValue);
	LPDISPATCH GetFont();
	void SetForeColor(long nNewValue);
	long GetForeColor();
	void SetTakeFocusOnClick(BOOL bNewValue);
	BOOL GetTakeFocusOnClick();
	void SetLocked(BOOL bNewValue);
	BOOL GetLocked();
	void SetMouseIcon(LPDISPATCH newValue);
	void SetRefMouseIcon(LPDISPATCH newValue);
	LPDISPATCH GetMouseIcon();
	void SetMousePointer(long nNewValue);
	long GetMousePointer();
	void SetPicture(LPDISPATCH newValue);
	void SetRefPicture(LPDISPATCH newValue);
	LPDISPATCH GetPicture();
	void SetPicturePosition(long nNewValue);
	long GetPicturePosition();
	void SetAccelerator(LPCTSTR lpszNewValue);
	CString GetAccelerator();
	void SetWordWrap(BOOL bNewValue);
	BOOL GetWordWrap();
};

//{{AFX_INSERT_LOCATION}}
// Microsoft Visual C++ will insert additional declarations immediately before the previous line.

#endif // !defined(AFX_COMMANDBUTTON_H__571AB67C_C79E_4B48_9C2C_14D91A448B3C__INCLUDED_)
